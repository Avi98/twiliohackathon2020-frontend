{"version":3,"sources":["assests/default-profile.png","components/styles.ts","components/inputField.tsx","components/signUp.tsx","components/login.tsx","server/api.ts","config.ts","context/uiTrigger.tsx","context/store.tsx","hooks/useAuth.ts","components/button.tsx","screens/loginSignUp.tsx","components/tosterFactory.tsx","components/imageUpload.styles.ts","components/imageUpload.tsx","components/profileForm.tsx","schema/index.ts","screens/Profile.tsx","App.tsx","index.js"],"names":["module","exports","Container","Styled","article","ImageSection","div","Section","section","SubmitButton","button","Footer","footer","FormCol","useStyle","makeStyles","root","margin","InputField","props","classes","TextField","className","SignUp","updateEmail","updatePassword","updateConfirmPassWord","updateUsername","state","id","label","value","username","onChange","e","target","type","email","password","confirmPassword","Login","Axios","axios","create","baseURL","process","headers","fetch","tokenHeaders","header","getToken","localStorage","getItem","this","url","data","param","post","then","response","error","console","get","put","Api","AuthApi","UITriggerContext","createContext","loading","showLoading","undefined","showSuccessMessage","setShowSuccessMessage","toasterType","setToasterType","setFullPageLoader","fullPageLoader","displayName","UITrigger","children","useState","Provider","useUITrigger","useContext","toggleLoading","userInitialState","user","userName","user_profile","StoreContext","userSession","updateUserSession","saveUserProfile","userReducer","action","profile","Store","useReducer","setUserState","setItem","String","useStore","formInitalState","initialState","showLogin","showSignUp","reducer","Button","onClick","disabled","CircularProgress","size","LoginSignUp","dispatch","navigate","useNavigate","updateShowLogin","submitLoginForm","a","payload","token","updateShowSignUp","submitSignIn","respose","replace","useLoginSignUp","Alert","elevation","variant","ToasterFactory","Snackbar","open","autoHideDuration","onClose","severity","Toaster","AvatarContainer","EditIcon","Preview","SelectedImg","img","ImageUpload","formik","file","imagePreviewUrl","selectedImage","setSelectedImage","accept","setFieldValue","preventDefault","reader","FileReader","files","onloadend","result","readAsDataURL","src","defaultImage","alt","CardContainer","styled","FomContainer","form","useStyles","theme","createStyles","display","flexWrap","textField","marginLeft","spacing","marginRight","width","ProfileForm","onSubmit","handleSubmit","required","Boolean","touched","first_name","errors","helperText","fullWidth","getFieldProps","last_name","mobile","current_location","description","ProfileSchema","Yup","max","matches","Profile","useFormik","initialValues","image","validationSchema","values","form_data","FormData","append","name","reduce","acc","key","user_id","Number","res","log","AlginCenter","info","UnAuthorize","path","Home","AuthRoutes","PageNotFound","App","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b57387d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default-profile.782adc2b.png\";","import Styled from 'styled-components/macro';\n\nexport const Container = Styled.article`\n    width: 60%;\n    border-radius: 0.8rem;\n    display:flex;\n    box-shadow: 0 2rem 2.4rem rgba(0,0,0,0.1);\n    background-color: var(--base-white-color);\n\n    @media (max-width: 768px) {\n    --base-title-color: #feeeee;\n    flex-direction: column;\n    background-color: var(--base-green-color);\n    width:100%;\n    height:100%;\n    align-items:center;\n    justify-content:center;\n  }\n\n  @media (min-width: 1200px){\n    height:470px;\n\n  }\n    \n\n`\nexport const ImageSection = Styled.div`\n        width: 50%;\n        background-color: var(--base-green-color);\n\n`\nexport const Section = Styled.section`\n        color: var(--base-title-color);\n        background-color: var(--c);\n        margin-left: 2em;\n        position: relative;\n        @media (max-width: 768px) {\n             background-color: var(--base-green-color);\n        }        \n        >h2{\n            font-size: 3.1em;\n            font-weight: 400;\n        }\n        >h3{\n            font-size: 2.4em;\n            font-weight: 400;\n        }\n\n\n`\nexport const SubmitButton = Styled.button`\n    background-color: var(--base-title-color);\n    color: var(--base-white-color);\n    padding: 0.5rem 4.5rem;\n    font-size: 1em;\n    font-weight: 200;\n    margin: 40px 0 0 0;\n    cursor: pointer;\n    @media (max-width: 768px){\n        background-color: var(--base-button-color);\n        color: var(--base-title-color);\n    }\n    &&&{\n        >svg{\n        height: 20px;\n        width: 20px;\n\n    }\n}\n\n`\n\nexport const Footer = Styled.footer`\n    @media (min-width: 768px){\n    position: absolute;\n    bottom:0;\n    }\n`\nexport const FormCol = Styled.div`\n    display:flex;\n    flex-direction: column;\n    margin-bottom: 1em;\n    .message{\n        font-size: 0.7em;\n    }.link{\n        font-weight: 600;\n        text-decoration: underline;\n        cursor: pointer;\n    }\n`","import React from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles, TextFieldProps } from '@material-ui/core';\n\n\nconst useStyle = makeStyles({\n    root: {\n        margin: '2% 0',\n    }\n})\n\nexport const InputField = (props: TextFieldProps) =>{\n    const classes = useStyle()\n    return <TextField className={classes.root} {...props} />\n}","import React from 'react'\n\nimport { ISignUp } from './types';\nimport { InputField } from './inputField';\n\nexport const SignUp: React.FC<ISignUp> = ({\n    updateEmail,\n    updatePassword,\n    updateConfirmPassWord,\n    updateUsername,\n    state }) => {\n    \n \n    return (<>\n        <InputField  id=\"username\" label=\"User Name\" value={state.username} onChange={(e: any) => updateUsername(e.target.value)} />\n        <InputField  id=\"email\" label=\"E-mail address\" type='email' value={state.email} onChange={(e: any) => updateEmail(e.target.value)} />\n        <InputField  id=\"password\" label=\"Password\" type='password' value={state.password} onChange={(e: any) => updatePassword(e.target.value)} />\n        <InputField  id=\"password\" label=\"confirm Password\" value={state.confirmPassword} onChange={(e: any) => updateConfirmPassWord(e.target.value)} />\n    </>)\n}","import React, { FC } from 'react'\nimport { ILogIn } from './types';\nimport { InputField } from './inputField';\n\n\nexport const Login: FC<ILogIn> = ({\n    updatePassword,\n    updateUsername,\n    state,\n}) =>\n    <>\n        <InputField id=\"userName\" label=\"User Name\" value={state.username} onChange={(e: any) => updateUsername(e.target.value)} />\n        <InputField id=\"password\" label=\"Password\" type='password' value={state.password} onChange={(e: any) => updatePassword(e.target.value)} />\n    </>\n\n\n","import axios, { AxiosResponse } from 'axios';\nimport { BASE_URL } from '../config';\n\nconst Axios = axios.create({\n    baseURL: `${BASE_URL}/api`,\n    \n    headers: { \n        'X-Custom-Header': 'foobar', \n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n     }  \n})\n\ninterface Fetch {\n    header: any\n    post: (url: string, data: object, param?: object) => Promise<AxiosResponse>\n    get: (url: string, param?: object) => Promise<AxiosResponse>\n    put: (url: string, data: object, param?: object) => Promise<AxiosResponse>\n}\nclass fetch implements Fetch {\n    header={}\n    constructor(tokenHeaders?: any){\n       this.header = tokenHeaders\n    }\n   \n    getToken = () =>{\n        if(this.header){\n            this.header = localStorage.getItem('token') ? {\n                headers: {\n                    'Authorization': `token ${localStorage.getItem('token')}`\n                }\n            } : {}\n        }\n    }\n    post(url: string, data: object, param = {}) {\n        this.getToken()\n        return Axios.post(url, data, { ...this.header,...param}).then((response) => response.data, (error) => console.error(error))\n    }\n    get(url: string, param = {}) {\n        this.getToken()\n        return Axios.get(url, { ...this.header,...param}).then((response) => response.data, (error) => error)\n    }\n    put(url: string, data: object, param = {}) {\n        this.getToken()\n        return Axios.put(url, data, { ...this.header,...param,}).then((response) => response.data, (error) => error)\n    }\n\n}\n\nconst tokenHeaders = localStorage.getItem('token') ? {\n    headers: {\n        'Authorization': `token ${localStorage.getItem('token')}`\n    }\n} : {}\nexport const Api = new fetch()\nexport const AuthApi = new fetch(true)","export const BASE_URL = process.env.REACT_APP_API_URL\nexport const ENV = process.env.REACT_APP_BUILD","import React, { useContext, createContext, ReactChild, useState } from \"react\"\nimport { UITriggerContextType, toasterType } from \"./types\";\n\n\n\nconst UITriggerContext = createContext<UITriggerContextType>({\n    loading: false,\n    showLoading: undefined,\n    showSuccessMessage: '',\n    setShowSuccessMessage: undefined,\n    toasterType: 'info',\n    setToasterType: undefined,\n    setFullPageLoader:undefined,\n    fullPageLoader: false\n\n});\nUITriggerContext.displayName = 'UITriggerContext'\n\nexport const UITrigger = ({ children }: { children: ReactChild }) => {\n    const [loading, showLoading] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState('')\n    const [toasterType, setToasterType] = useState<toasterType>('')\n    const [fullPageLoader, setFullPageLoader] = useState<boolean>(false)\n\n    return <UITriggerContext.Provider value={{\n        loading,\n        showLoading,\n        showSuccessMessage,\n        setShowSuccessMessage,\n        toasterType,\n        setToasterType,\n        setFullPageLoader,\n        fullPageLoader\n    }}>\n        <div>hellow</div>\n        {children}</UITriggerContext.Provider>\n}\n\nexport const useUITrigger = () => {\n    const {\n        loading,\n        showLoading,\n        showSuccessMessage,\n        setShowSuccessMessage,\n        toasterType,\n        setToasterType,\n        setFullPageLoader,\n        fullPageLoader\n    } = useContext(UITriggerContext);\n    const toggleLoading = (value: boolean) => showLoading && showLoading(value)\n    return {\n        loading,\n        toggleLoading,\n        showSuccessMessage,\n        setShowSuccessMessage,\n        toasterType,\n        setToasterType,\n        setFullPageLoader,\n        fullPageLoader\n    }\n}","import React, { createContext, ReactChild, useReducer, useContext } from 'react'\nimport { userState, user, UserStoreContextType, userStateAction, userProfile } from './types'\n\nconst userInitialState: userState = {\n    user: {\n        id: localStorage.getItem('user_id'),\n        email: '',\n        userName: ''\n    },\n    user_profile: {}\n}\nconst StoreContext = createContext<Partial<UserStoreContextType>>({ userSession: userInitialState, updateUserSession: undefined, saveUserProfile: undefined })\n\nStoreContext.displayName = 'Store'\n\nconst userReducer = (state: userState, action: userStateAction) => {\n    switch (action.type) {\n        case 'SET_USER': return { ...state, user: action.value }\n        case 'SET_USER_PROFILE': return { ...state, profile: action.value }\n\n        default: return state\n    }\n}\nexport const Store = ({ children }: { children: ReactChild }) => {\n    const [user, setUserState] = useReducer(userReducer, userInitialState)\n\n    const updateUserSession = (value: user) => {\n        localStorage.setItem('user_id', String(value.id))\n        setUserState({ type: 'SET_USER', value })\n    }\n    const saveUserProfile = (value: userProfile) => {\n        setUserState({ type: 'SET_USER_PROFILE', value })\n    }\n    return <StoreContext.Provider value={{\n        userSession: user,\n        //@ts-ignore\n        updateUserSession, saveUserProfile\n    }}>\n        {children}\n    </StoreContext.Provider>\n}\n\nexport const useStore = () => {\n    const { userSession, updateUserSession, saveUserProfile } = useContext(StoreContext)\n        return {\n            userSession,\n            updateUserSession,\n            saveUserProfile\n        }\n\n}\n","import React, { useReducer, useState } from 'react'\nimport { Form, LoginSingToggleType, LoginSingUpAction } from '../components/types'\nimport { BASE_URL } from '../config'\nimport axios from 'axios'\nimport { Api, AuthApi } from '../server/api'\nimport { useUITrigger } from '../context/uiTrigger'\nimport { useNavigate } from '@reach/router'\nimport { PorfileData } from '../context/types'\nimport { useStore } from '../context/store'\n\n\nconst formInitalState = {\n    email: '',\n    password: '',\n    confirmPassword: '',\n    username: '',\n}\nconst initialState = {\n    ...formInitalState,\n    showLogin: false,\n    showSignUp: true\n}\nfunction reducer(state: Form & LoginSingToggleType, action: LoginSingUpAction) {\n    switch (action.type) {\n        // form state\n        case 'UPDATE_EMAIL': return { ...state, email: action.value }\n        case 'UPDATE_PASSWORD': return { ...state, password: action.value }\n        case 'UPDATE_CONFIRM_PASSWORD': return { ...state, confirmPassword: action.value }\n        case 'UPDATE_USERNAME': return { ...state, username: action.value }\n\n        //login or Signup\n        case 'SHOW_LOGIN': return { ...state, showLogin: true, showSignUp: false }\n        case 'SHOW_SIGNUP': return { ...state, showSignUp: true, showLogin: false }\n        case 'RESET_FORM': return { ...state, ...formInitalState }\n\n\n        default: return state\n    }\n}\n\nexport const useLoginSignUp = () => {\n\n    const [state, dispatch] = useReducer(reducer, initialState)\n    const { toggleLoading, setToasterType, setShowSuccessMessage } = useUITrigger()\n    const navigate = useNavigate()\n\n    const {updateUserSession, saveUserProfile} = useStore()\n\n    const updateEmail = (value: string) => dispatch({ type: 'UPDATE_EMAIL', value })\n    const updatePassword = (value: string) => dispatch({ type: 'UPDATE_PASSWORD', value })\n    const updateConfirmPassWord = (value: string) => dispatch({ type: 'UPDATE_CONFIRM_PASSWORD', value })\n    const updateUsername = (value: string) => dispatch({ type: 'UPDATE_USERNAME', value })\n\n    const updateShowLogin = () => dispatch({ type: 'SHOW_LOGIN', value: null })\n    const updateShowSignUp = () => dispatch({ type: 'SHOW_SIGNUP', value: null })\n    const resetForm = () => dispatch({ type: 'RESET_FORM', value: null })\n\n    const submitLoginForm = async () => {\n        toggleLoading(true)\n        const { username, email, password } = state\n        const payload = { username, email, password }\n        try {\n            const data = await Api.post('/register', payload)\n            toggleLoading(false)\n            if (data.token) { // user authenticated\n                updateShowLogin()\n                setToasterType && setToasterType('success')\n                setShowSuccessMessage && setShowSuccessMessage('Account Created Successfully ')\n                localStorage.setItem('token', data.token);\n                resetForm()\n            }\n        } catch (e) {\n            console.error('api request error', e)\n            toggleLoading(false)\n        }\n    }\n    const submitSignIn = async () => {\n        toggleLoading(true)\n        const { username, email, password } = state\n        const payload = { username, password }\n        try {\n            toggleLoading(false)\n            const data = await Api.post('/login', payload).then(async respose => {\n                if (respose.token) {\n                    const  param = {\n                        headers: {\n                            'Authorization': `token ${respose.token}`\n                        }\n                    }\n                    updateUserSession && updateUserSession(respose.user)\n                    localStorage.setItem('token', respose.token);\n                    const profile = await Api.get('/profile', param)\n                    debugger\n                    if(profile.profile){\n                        saveUserProfile && saveUserProfile(profile.profile)\n                        // setProfileData(profile.profile)\n                        navigate('user/home',{replace: true})\n                    }else{\n                        navigate('user/profile')\n                    }\n                }\n            })\n        } catch (e) {\n            toggleLoading(false)\n            console.error('api login error', e)\n        }\n    }\n    return {\n        state,\n        updateEmail,\n        updatePassword,\n        updateConfirmPassWord,\n        updateUsername,\n        updateShowLogin,\n        updateShowSignUp,\n        submitLoginForm,\n        submitSignIn,\n    }\n\n\n}","import React from 'react'\nimport { SubmitButton } from './styles'\nimport { IButton } from './types'\nimport { useUITrigger } from '../context/uiTrigger'\nimport { CircularProgress } from '@material-ui/core'\n\nexport const Button = ({ label, onClick, type = 'submit' }:IButton) =>{ \n    const {loading} = useUITrigger()\nreturn<SubmitButton type={type} onClick={onClick} disabled={loading}>{loading ? <CircularProgress size={20} /> :label}</SubmitButton>\n}","import React, { FC } from 'react';\nimport { Container, Section, ImageSection, FormCol, Footer } from '../components/styles';\nimport { SignUp } from '../components/signUp';\nimport { Login } from '../components/login';\nimport { useLoginSignUp } from '../hooks/useAuth';\nimport { useStore } from '../context/store';\nimport { Button } from '../components/button';\n// import { Button } from './button';\n\nexport const LoginSignUp: FC<{ path: string }> = () => {\n    const { updateEmail,\n        updatePassword,\n        updateConfirmPassWord,\n        updateUsername,\n        updateShowLogin,\n        updateShowSignUp, state, submitLoginForm, submitSignIn } = useLoginSignUp()\n\n    return (<Container>\n        <ImageSection />\n        <Section>\n            <FormCol>\n                <h2>Welcome to our community</h2>\n                <h3>Lets create an account</h3>\n                {state.showSignUp ? <SignUp\n                    state={state}\n                    updateEmail={updateEmail}\n                    updatePassword={updatePassword}\n                    updateConfirmPassWord={updateConfirmPassWord}\n                    updateUsername={updateUsername}\n                    updateShowLogin={updateShowLogin}\n                    updateShowSignUp={updateShowSignUp}\n                    submitLoginForm={submitLoginForm}\n\n                /> : \n                <Login\n                        state={state}\n                        updateEmail={updateEmail}\n                        updatePassword={updatePassword}\n                        updateConfirmPassWord={updateConfirmPassWord}\n                        updateUsername={updateUsername}\n                        updateShowLogin={updateShowLogin}\n                        updateShowSignUp={updateShowSignUp}\n                        submitSignIn={submitSignIn}\n\n                    />\n                    }\n                <Footer>\n\n                    {!state.showSignUp ?\n                        (\n                            <>\n                                <Button label=\"Log In\" onClick={submitSignIn} />\n                                <p className='message'>Don't have Account? <span className='link' onClick={updateShowSignUp}>Sign Up</span> </p>\n                            </>\n                        )\n                        :\n\n                        (\n                            <>\n                                <Button label=\"Sign Up\" onClick={submitLoginForm} />\n                                <p className='message'>Already have an account? <span className='link' onClick={updateShowLogin}>Log in</span> </p>\n                            </>)\n                    }\n                </Footer>\n            </FormCol>\n        </Section>\n    </Container>)\n}","\nimport React from 'react';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { useUITrigger } from '../context/uiTrigger';\n \nexport type Severity = 'success' | 'info' | 'warning' | 'error';\ninterface IToasterFactory{\n    severity: Severity,\n    message: string,\n    open: boolean\n    handleClose?:(event: React.SyntheticEvent) => void;\n}\n\nexport function Alert(props: AlertProps) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport function ToasterFactory() {\n    const data  = useUITrigger()\n\n    const cleanToasterMessage = () => data.setShowSuccessMessage && data.setShowSuccessMessage('')\n    const Toaster = () => {\n        switch (data.toasterType) {\n            case 'success': return <Alert severity=\"success\">{data.showSuccessMessage}</Alert>\n            case 'info': return <Alert severity=\"info\">{data.showSuccessMessage}</Alert>\n            case 'warning': return <Alert severity=\"warning\">{data.showSuccessMessage}</Alert>\n            case 'error': return <Alert severity=\"error\">{data.showSuccessMessage}</Alert>\n            \n        }\n    }\n    return (\n        <Snackbar open={data.showSuccessMessage ===''? false : true} autoHideDuration={1000} onClose={cleanToasterMessage}>\n            {Toaster()}\n        </Snackbar>\n    )\n\n}","\nimport Styled from 'styled-components/macro';\nimport defaultImage from '../assests/default-profile.png'\n\n// const test = ''\n// const imageUrl = (p:{selectedImg?:string})=> p.selectedImg ? `url(${p.selectedImg})` : `url(${defaultImage})`\n\nexport const AvatarContainer = Styled.div`\nposition:relative;\nmax-width: 50px;\n`\nexport const EditIcon = Styled.div`\nposition:absolute;\nleft: 70px;\nz-index: 2;\n>input{\n    height: 110px;\n    width: 140px;\n    position: absolute;\n    right: 0px;\n    opacity: 0;\n}\n>label{\n            \n            display: inline-block;\n            width: 34px;\n            height: 34px;\n            margin-bottom: 0;\n            border-radius: 100%;\n            background: #FFFFFF;\n            border: 1px solid transparent;\n            box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.12);\n            cursor: pointer;\n            font-weight: normal;\n            transition: all .2s ease-in-out;\n            &:hover {\n                background: #f1f1f1;\n                border-color: #d6d6d6;\n            }\n    ::after {\n                content: \"\\f040\";\n                font-family: 'FontAwesome';\n                color: #757575;\n                position: absolute;\n                top: 10px;\n                left: 0;\n                right: 0;\n                text-align: center;\n                margin: auto;\n            }\n}\n\n`\nexport const Preview = Styled.div`\nwidth:92px;\nheight: 92px;\nposition:relative;\nborder-radius: 100%;\nborder: 6px solid #F8F8F8;\nbox-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);\n`\n\nexport const SelectedImg = Styled.img`\nborder-radius: 100%;\nbackground-size: cover;\nbackground-repeat: no-repeat;\nbackground-position: center;\n/* background-image: ; */\nheight: 100%;\nwidth: 100%;\n\n}\n`","import React, { FC, useState } from 'react'\nimport { IImageUpload } from \"./types\";\nimport { AvatarContainer, EditIcon, Preview, SelectedImg } from './imageUpload.styles'\nimport defaultImage from '../assests/default-profile.png'\n\n/**Todo need to clean this code, make a dumb component  */\nexport const ImageUpload: FC<IImageUpload> = ({ formik }) => {\n    const [selectedImage, setSelectedImage] = useState<{file:object, imagePreviewUrl: string | null}>({file:{}, imagePreviewUrl:null})\n    const handleFileUpload = (e: any) => {\n        const {setFieldValue} = formik; \n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            if(typeof reader.result === 'string'){\n\n                setSelectedImage({\n                    file,\n                    imagePreviewUrl: reader.result\n                });\n            }\n        }\n\n        setFieldValue('image', file)\n        reader.readAsDataURL(file)\n    }\n    return <AvatarContainer>\n        <EditIcon>\n            <input accept=\".png, jpg, .jpeg\" type=\"file\" onChange={handleFileUpload} />\n            <label />\n        </EditIcon>\n        <Preview>\n            <SelectedImg src={selectedImage.imagePreviewUrl ? selectedImage.imagePreviewUrl : defaultImage} alt=\" profile image\" />\n        </Preview>\n    </AvatarContainer>\n}","import React, { SFC } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { Container } from '../components/styles';\nimport styled from \"styled-components\"\nimport { ImageUpload } from '../components/imageUpload';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\nimport { Button } from './button';\nimport {IProfileProps} from \"./types\"\n\nconst CardContainer = styled(Container)`\n    padding: 10%;\n    justify-content: center;\n    color: var(--base-title-color);\n    display:flex;\n    flex-direction: column;\n    align-items:center;\n    justify-content:center;\n    align-self: center;\n    @media only screen and (min-width: 600px) {\n        width: 450px;\n    }\n    \n`\nconst FomContainer = styled.form`\n    display:grid;\n    grid-template-rows: 2fr 1fr 1fr 1fr 1fr 1fr 2fr;\n    justify-content:space-between;\n    align-items:center;\n    grid-gap: 20px;\n    .image-position{\n        margin-left: 20px;\n    }\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n        },\n        textField: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1),\n            width: '650px',\n        },\n    }),\n);\n\n\nexport const ProfileForm:SFC<IProfileProps> = ({formik}) => {\n    const classes = useStyles();\n    return (\n        <CardContainer>\n            <h2>Upload Your Profile</h2>\n            <FomContainer className={classes.root} onSubmit={formik.handleSubmit}>\n                <div className=\"image-position\">\n                    <ImageUpload formik={formik} />\n                </div>\n\n                <TextField  required id=\"standard-required\" error={Boolean( formik.touched?.first_name &&  formik.errors?.first_name)} helperText={formik.touched?.first_name &&  formik.errors?.first_name}  fullWidth label=\"First Name\" {...formik.getFieldProps('first_name')} />\n                <TextField required id=\"standard-required2\" error={Boolean(formik.touched?.last_name &&  formik.errors?.last_name)} helperText={formik.touched?.last_name &&  formik.errors?.last_name} fullWidth label=\"Last Name\" {...formik.getFieldProps('last_name')} />\n                <TextField required type=\"number\" id=\"standard-required\" error={Boolean(formik.touched?.mobile &&  formik.errors?.mobile)} helperText={ formik.touched?.mobile && formik.errors?.mobile} fullWidth label=\"Mobile\" {...formik.getFieldProps('mobile')} />\n                <TextField id=\"standard-required\" fullWidth label=\"Current Location\" error={formik.touched?.current_location &&  Boolean(formik.errors?.current_location)} helperText={formik.touched?.current_location &&  formik.errors?.current_location} {...formik.getFieldProps('current_location')} />\n                <TextField id=\"standard-required2\" fullWidth label=\"Description\" error={Boolean(formik.touched?.description &&  formik.errors?.description)} helperText={formik.touched?.description &&  formik.errors?.description} {...formik.getFieldProps('description')} />\n                <Button label=\"Submit\" type='submit' />\n            </FomContainer>\n\n        </CardContainer>\n    )\n}","import * as Yup from 'yup';\n\nconst phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n\n\n\nexport const ProfileSchema = Yup.object({\n    first_name: Yup.string()\n    .max(20, 'Must be not more than 20 letters')\n    .required(' name is required'),\n    last_name: Yup.string()\n    .max(20, 'Must be not more than 20 letters')\n    .required((' name is required')),\n    mobile: Yup.string().matches(phoneRegExp, 'Invalid mobile number').required(('mobile is required')),\n    current_location: Yup.string(),\n    description: Yup.string(),\n})","import React from 'react';\nimport { useFormik } from 'formik';\n\nimport { ProfileForm } from '../components/profileForm';\nimport { ProfileSchema } from \"../schema\"\nimport { AuthApi } from '../server/api';\nimport { useStore } from '../context/store';\n\n\nexport interface ProfileProps {\n    path: string\n}\n\nconst Profile: React.SFC<ProfileProps> = () => {\n    const {userSession} = useStore()\n    const formik = useFormik({\n        initialValues: {\n            first_name: '',\n            last_name: '',\n            mobile: '',\n            current_location: '',\n            description: '',\n            image: ''\n        },\n        validationSchema: ProfileSchema,\n        onSubmit: (values) => {\n            const form_data:any = new FormData()\n            //@ts-ignore\n            values.image && form_data.append('image', values.image, values.image.name)\n            form_data.append('first_name', values.first_name)\n            form_data.append('last_name', values.last_name)\n            form_data.append('mobile', values.mobile)            \n            values.current_location && form_data.append('current_location', values.current_location)\n            values.description && form_data.append('description', values.description)\n            const payload = [...form_data].reduce((acc:any, [key, value]:any)=>{\n                return{\n                    ...acc,\n                    [key]: value\n                }\n            },{})\n            AuthApi.post(`/profile`, {...payload, user_id:  Number(userSession?.user.id)}, {\n                    'content-type': 'multipart/form-data'\n                \n            })\n                .then(res => console.log('res', res), error => console.log('error', error))\n        }\n    })\n    return (\n        <ProfileForm\n            formik={formik}\n        />\n    );\n}\n\nexport { Profile };","import React, { Component, FC } from 'react';\nimport './App.css';\nimport { LoginSignUp, ToasterFactory } from \"./components\";\nimport Styled from \"styled-components/macro\";\nimport { Router, useNavigate } from \"@reach/router\"\nimport { UITrigger } from './context/uiTrigger';\nimport { Profile } from './screens/Profile';\nimport { ENV } from './config';\nimport { Store } from './context/store';\n\n\nconst AlginCenter = Styled.div`\n  display:flex;\n  justify-content:center;\n  align-items:center;\n  height: 100vh;\n`\ninterface IPath {\n  path: string,\n  children?: any\n}\nconsole.info('in develop auth routes dont work env:-', ENV)\n\nconst UnAuthorize: FC<IPath> = () => <AlginCenter>\n  <LoginSignUp path=\"/\" />\n</AlginCenter>\n\nconst Home: FC<IPath> = () => <h2>home Routes working fine</h2>\nconst AuthRoutes: FC<IPath> = ({ path, children }: IPath) => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  console.info('in develop auth routes dont work env:-', ENV)\n  if (!token && ENV !== 'develop') {\n    navigate('/', { replace: false })\n    return <AlginCenter>\n      <LoginSignUp path=\"/\" />\n    </AlginCenter>\n  }\n  else {\n    return (\n      <div>\n        <AlginCenter>\n          {children}\n        </AlginCenter>\n      </div>\n    )\n  }\n  return <></>\n}\n\n// <AlginCenter>\n//   {/* <Dashbord path='dash'/> */}\n// </AlginCenter>\n\n\n\n\nconst PageNotFound: FC<{ path: string }> = () => <AlginCenter>Page Not Found</AlginCenter>\nclass App extends Component {\n  render() {\n    return (\n      <Store>\n        <UITrigger>\n          <>\n            <ToasterFactory />\n            <Router>\n              <UnAuthorize path=\"/\" />\n              <AuthRoutes path=\"user\" >\n                <Profile path=\"profile\" />\n                <Home path=\"home\" />\n              </AuthRoutes>\n              <PageNotFound path=\"*\" />\n            </Router>\n          </>\n        </UITrigger >\n      </Store>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}